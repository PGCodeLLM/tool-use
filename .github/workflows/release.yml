name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_name: sos-x86_64-unknown-linux-gnu.tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            archive_name: sos-aarch64-unknown-linux-gnu.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_name: sos-x86_64-apple-darwin.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive_name: sos-aarch64-apple-darwin.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TERM_COLOR: always
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Archive binary
        shell: bash
        run: |
          BINARY_NAME="sos"

          mkdir -p release
          cp "target/${{ matrix.target }}/release/$BINARY_NAME" "release/"

          tar -czf "release/${{ matrix.archive_name }}" -C "release" "$BINARY_NAME"

          echo "ARCHIVE_PATH=release/${{ matrix.archive_name }}" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ env.ARCHIVE_PATH }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*/*
          fail_on_unmatched_files: true
          body: |
            New release of sos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
